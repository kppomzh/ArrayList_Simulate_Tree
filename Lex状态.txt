全局：
1.读取“转入初态字符”转入状态0，simpleMatch状态除外；同时对hardMatch来讲，还有伪初态48可以转入。
2.读取;转入终态，simpleMatch状态除外。
3.读取hardMatch字符时转入状态0，并将hardMatch字符压栈/出栈处理
4.读取simpleMatch字符转入状态3，覆盖第3条

状态0：（初态）
1.读取字母转入状态1，无动作。
2.读取数字转入状态2，无动作。
3.读取simpleBucket左侧字符转入状态3，无动作。

状态1：（单词状态）
1.字母
2.下划线
3.数字
4.符号，转入状态4

状态2：（数字状态）
1.数字。
2.'.'，设置为小数，并阻断继续识别'.'。
3.读取其他符号转到状态4。

状态3：（simpleMatch）
直到读取对应的右侧字符之前不转出该状态，读到对应右侧字符后转入状态0。

状态4：（符号状态）
1.符号
2.数字，转入状态2
3.字母，转入状态1

状态5：(hardMatch)
直到读取对应的右侧字符之前不转出该状态，读到对应右侧字符后转入状态0。

状态6：（句号点）
状态7：（减号）

状态x：（终态）
结束分析

转换状态的时候，需要将现有缓存区中的字符转换成单词

多义符号
.
+
-
^
=